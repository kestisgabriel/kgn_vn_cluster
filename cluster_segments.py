import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans

# csv file generated by extraction script
FEATURES_CSV = "music_features_structural.csv"

# output file with cluster assignments
OUTPUT_CSV = "clustered_results.csv"

# total number of musical 'themes' to identify across entire dataset
N_CLUSTERS = 50 

# clustering logic
if __name__ == "__main__":
    # load dataset
    df = pd.read_csv(FEATURES_CSV)
    print(f"Loaded {len(df)} segments from {FEATURES_CSV}")

    # prep data for clustering
    features_to_cluster = df.drop(columns=['filename', 'start_time_s', 'end_time_s'])

    # scale features
    scaler = StandardScaler()
    scaled_features = scaler.fit_transform(features_to_cluster)
    print("Features scaled for optimal clustering.")

    # perform K-Means Clustering
    kmeans = KMeans(
        n_clusters=N_CLUSTERS,
        n_init='auto',
        random_state=42
    )
    print(f"Running K-Means to find {N_CLUSTERS} clusters...")
    kmeans.fit(scaled_features)

    # add cluster labels to original data
    df['cluster'] = kmeans.labels_

    # write final results
    df_sorted = df.sort_values(by='cluster')
    df_sorted.to_csv(OUTPUT_CSV, index=False)
    
    print(f"\n Clustering complete.")
    print(f" Results saved to {OUTPUT_CSV}")