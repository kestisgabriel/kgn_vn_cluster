import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans

# --- Configuration ---
# The CSV file generated by your feature extraction script.
FEATURES_CSV = "music_features_structural.csv"

# The final output file with cluster assignments.
OUTPUT_CSV = "clustered_results.csv"

# The number of musical themes you want to find across all your files.
N_CLUSTERS = 50 

# --- Main Clustering Logic ---
if __name__ == "__main__":
    # 1. Load the dataset
    df = pd.read_csv(FEATURES_CSV)
    print(f"Loaded {len(df)} segments from {FEATURES_CSV}")

    # 2. Prepare the data for clustering
    features_to_cluster = df.drop(columns=['filename', 'start_time_s', 'end_time_s'])

    # 3. Scale the features
    scaler = StandardScaler()
    scaled_features = scaler.fit_transform(features_to_cluster)
    print("Features scaled for optimal clustering.")

    # 4. Perform K-Means Clustering
    kmeans = KMeans(
        n_clusters=N_CLUSTERS,
        n_init='auto',
        random_state=42
    )
    print(f"Running K-Means to find {N_CLUSTERS} clusters...")
    kmeans.fit(scaled_features)

    # 5. Add cluster labels to the original data
    df['cluster'] = kmeans.labels_

    # 6. Save the final results
    df_sorted = df.sort_values(by='cluster')
    df_sorted.to_csv(OUTPUT_CSV, index=False)
    
    print(f"\nâœ… Clustering complete!")
    print(f"ðŸŽ¶ Results saved to {OUTPUT_CSV}")